---
- name: Update APT package cache
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"
  changed_when: False

- name: Ensure dependencies are installed
  apt:
    name:
      - curl
      - openssl
      - iptables
    state: present

- name: Test for raspberry pi /proc/cpuinfo
  ansible.builtin.command: grep -E "Raspberry Pi|BCM2708|BCM2709|BCM2835|BCM2836" /proc/cpuinfo
  register: grep_cpuinfo_raspberrypi
  failed_when: false
  changed_when: false

- name: Test for raspberry pi /proc/device-tree/model
  ansible.builtin.command: grep -E "Raspberry Pi" /proc/device-tree/model
  register: grep_device_tree_model_raspberrypi
  failed_when: false
  changed_when: false

- name: Set raspberry_pi fact to true
  ansible.builtin.set_fact:
    raspberry_pi: true
  when:
    grep_cpuinfo_raspberrypi.rc == 0 or grep_device_tree_model_raspberrypi.rc == 0

- name: Add cgroup parameters to cmdline.txt
  lineinfile:
    path: /boot/firmware/cmdline.txt
    backrefs: yes
    regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1\b).*)$'
    line: '\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1'
  register: cmdline_updated
  when: raspberry_pi|default(false)
  tags: notest

- name: Reboot if cmdline.txt was updated
  reboot:
  tags: notest
  when: 
    - cmdline_updated.changed

- name: Download and install k3s with custom args
  changed_when: False
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --snapshotter=native" sh -

- name: Ensure k3s is started and enabled at boot
  systemd:
    name: k3s
    enabled: yes
    state: started

- name: Fetch k3s token from master
  become: yes
  command: cat /var/lib/rancher/k3s/server/node-token
  register: server_token
  changed_when: False

- name: Set the token as a fact
  set_fact:
    k3s_token: "{{ server_token.stdout }}"
